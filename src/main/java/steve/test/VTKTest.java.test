/**
 * NOAA's National Climatic Data Center
 * NOAA/NESDIS/NCDC
 * 151 Patton Ave, Asheville, NC  28801
 * 
 * THIS SOFTWARE AND ITS DOCUMENTATION ARE CONSIDERED TO BE IN THE 
 * PUBLIC DOMAIN AND THUS ARE AVAILABLE FOR UNRESTRICTED PUBLIC USE.  
 * THEY ARE FURNISHED "AS IS." THE AUTHORS, THE UNITED STATES GOVERNMENT, ITS
 * INSTRUMENTALITIES, OFFICERS, EMPLOYEES, AND AGENTS MAKE NO WARRANTY,
 * EXPRESS OR IMPLIED, AS TO THE USEFULNESS OF THE SOFTWARE AND
 * DOCUMENTATION FOR ANY PURPOSE. THEY ASSUME NO RESPONSIBILITY (1)
 * FOR THE USE OF THE SOFTWARE AND DOCUMENTATION; OR (2) TO PROVIDE
 * TECHNICAL SUPPORT TO USERS.
 */

package steve.test;

import vtk.*;

public class VTKTest {

  // in the static contructor we load in the native code
  // The libraries must be in your path to work
  static { 
    System.loadLibrary("vtkCommonJava"); 
    System.loadLibrary("vtkFilteringJava"); 
    System.loadLibrary("vtkIOJava"); 
    System.loadLibrary("vtkImagingJava"); 
    System.loadLibrary("vtkGraphicsJava"); 
    System.loadLibrary("vtkRenderingJava"); 
  }

  // the main function
  public static void main (String[] args)
  {
	// create sphere geometry
	vtkSphereSource sphere = new vtkSphereSource();
	sphere.SetRadius(1.0);
	sphere.SetThetaResolution(18);
	sphere.SetPhiResolution(18);

	// map to graphics objects
	vtkPolyDataMapper map = new vtkPolyDataMapper();
	map.SetInput(sphere.GetOutput());

	// actor coordinates geometry, properties, transformation
	vtkActor aSphere = new vtkActor();
	aSphere.SetMapper(map);
	aSphere.GetProperty().SetColor(0,0,1); // color blue

	// a renderer for the data
	vtkRenderer ren1 = new vtkRenderer();
	ren1.AddActor(aSphere);
	ren1.SetBackground(1,1,1); // background color white

	// a render window to display the contents
	vtkRenderWindow renWin = new vtkRenderWindow();
	renWin.AddRenderer(ren1);
	renWin.SetSize(300,300);

	// an interactor to allow control of the objects
	vtkRenderWindowInteractor iren = new vtkRenderWindowInteractor();
	iren.SetRenderWindow(renWin);

	// trigger the rendering and start the interaction
	renWin.Render();
	iren.Start();
  }
}
